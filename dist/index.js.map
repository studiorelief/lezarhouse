{
  "version": 3,
  "sources": ["../bin/live-reload.js", "../src/utils/darkmode.ts", "../src/utils/navbar.ts", "../src/index.ts"],
  "sourcesContent": ["new EventSource(`${SERVE_ORIGIN}/esbuild`).addEventListener('change', () => location.reload());\n", "export function darkModeContent() {\n  document.documentElement.addEventListener('classChange', () => {\n    const isDarkMode =\n      document.documentElement.classList.contains('w-mod-js') &&\n      document.documentElement.classList.contains('dark-mode');\n    document.querySelectorAll('.navbar_text.is-darkmode').forEach((el) => {\n      el.textContent = isDarkMode ? 'Light mode' : 'Dark mode';\n    });\n  });\n\n  const observer = new MutationObserver((mutations) => {\n    mutations.forEach((mutation) => {\n      if (mutation.attributeName === 'class') {\n        const event = new CustomEvent('classChange');\n        document.documentElement.dispatchEvent(event);\n      }\n    });\n  });\n\n  observer.observe(document.documentElement, { attributes: true });\n}\n", "export function toggleSize() {\n  const toggleNavbarSize = () => {\n    // Basculer l'affichage des textes de la navbar\n    document.querySelectorAll('.navbar_text, .navbar_brand-logo-text').forEach((el) => {\n      const htmlElement = el as HTMLElement;\n      htmlElement.style.display = htmlElement.style.display === 'none' ? '' : 'none';\n    });\n\n    // Ajuster la largeur du conteneur de la navbar\n    const navbarContainer = document.querySelector('.navbar_container') as HTMLElement | null;\n    if (navbarContainer) {\n      navbarContainer.style.width = navbarContainer.classList.contains('toggled-size')\n        ? ''\n        : '2.37rem';\n      navbarContainer.classList.toggle('toggled-size');\n    }\n\n    // Appliquer les styles de padding sp\u00E9cifiques aux liens de la navbar\n    document.querySelectorAll('.navbar_menu-link').forEach((el) => {\n      const htmlElement = el as HTMLElement;\n      if (navbarContainer && navbarContainer.classList.contains('toggled-size')) {\n        // Ajouter une classe pour appliquer le style souhait\u00E9 (remplacez 'custom-padding' par votre classe CSS)\n        htmlElement.classList.add('custom-padding');\n      } else {\n        // Retirer la classe lorsque le conteneur de la navbar est dans son \u00E9tat normal\n        htmlElement.classList.remove('custom-padding');\n      }\n    });\n  };\n\n  // Ajouter l'\u00E9couteur d'\u00E9v\u00E9nement au bouton de basculement\n  const toggleButton = document.querySelector('.navbar_toggle-size');\n  if (toggleButton) toggleButton.addEventListener('click', toggleNavbarSize);\n}\n", "import './index.css';\n\nimport { darkModeContent } from '$utils/darkmode';\nimport { toggleSize } from '$utils/navbar';\n\nwindow.Webflow ||= [];\nwindow.Webflow.push(() => {\n  darkModeContent();\n  toggleSize();\n});\n"],
  "mappings": ";;;AAAA,MAAI,YAAY,GAAG,uBAAY,UAAU,EAAE,iBAAiB,UAAU,MAAM,SAAS,OAAO,CAAC;;;ACAtF,WAAS,kBAAkB;AAChC,aAAS,gBAAgB,iBAAiB,eAAe,MAAM;AAC7D,YAAM,aACJ,SAAS,gBAAgB,UAAU,SAAS,UAAU,KACtD,SAAS,gBAAgB,UAAU,SAAS,WAAW;AACzD,eAAS,iBAAiB,0BAA0B,EAAE,QAAQ,CAAC,OAAO;AACpE,WAAG,cAAc,aAAa,eAAe;AAAA,MAC/C,CAAC;AAAA,IACH,CAAC;AAED,UAAM,WAAW,IAAI,iBAAiB,CAAC,cAAc;AACnD,gBAAU,QAAQ,CAAC,aAAa;AAC9B,YAAI,SAAS,kBAAkB,SAAS;AACtC,gBAAM,QAAQ,IAAI,YAAY,aAAa;AAC3C,mBAAS,gBAAgB,cAAc,KAAK;AAAA,QAC9C;AAAA,MACF,CAAC;AAAA,IACH,CAAC;AAED,aAAS,QAAQ,SAAS,iBAAiB,EAAE,YAAY,KAAK,CAAC;AAAA,EACjE;;;ACpBO,WAAS,aAAa;AAC3B,UAAM,mBAAmB,MAAM;AAE7B,eAAS,iBAAiB,uCAAuC,EAAE,QAAQ,CAAC,OAAO;AACjF,cAAM,cAAc;AACpB,oBAAY,MAAM,UAAU,YAAY,MAAM,YAAY,SAAS,KAAK;AAAA,MAC1E,CAAC;AAGD,YAAM,kBAAkB,SAAS,cAAc,mBAAmB;AAClE,UAAI,iBAAiB;AACnB,wBAAgB,MAAM,QAAQ,gBAAgB,UAAU,SAAS,cAAc,IAC3E,KACA;AACJ,wBAAgB,UAAU,OAAO,cAAc;AAAA,MACjD;AAGA,eAAS,iBAAiB,mBAAmB,EAAE,QAAQ,CAAC,OAAO;AAC7D,cAAM,cAAc;AACpB,YAAI,mBAAmB,gBAAgB,UAAU,SAAS,cAAc,GAAG;AAEzE,sBAAY,UAAU,IAAI,gBAAgB;AAAA,QAC5C,OAAO;AAEL,sBAAY,UAAU,OAAO,gBAAgB;AAAA,QAC/C;AAAA,MACF,CAAC;AAAA,IACH;AAGA,UAAM,eAAe,SAAS,cAAc,qBAAqB;AACjE,QAAI;AAAc,mBAAa,iBAAiB,SAAS,gBAAgB;AAAA,EAC3E;;;AC5BA,SAAO,YAAY,CAAC;AACpB,SAAO,QAAQ,KAAK,MAAM;AACxB,oBAAgB;AAChB,eAAW;AAAA,EACb,CAAC;",
  "names": []
}
